use std::collections::HashSet;
use std::sync::OnceLock;

static SLURS: OnceLock<HashSet<&'static str>> = OnceLock::new();

fn get_slurs() -> &'static HashSet<&'static str> {
	SLURS.get_or_init(|| {
		HashSet::from([
			"abbo",
			"abeed",
			"africoon",
			"alligatorbait",
			"amcik",
			"anilingus",
			"arabush",
			"argie",
			"armo",
			"arschloch",
			"assnigger",
			"beaner",
			"beaners",
			"beardedclam",
			"bluegum",
			"bluegums",
			"bogan",
			"bohunk",
			"bountybar",
			"buddhahead",
			"camel jockey",
			"cameljockey",
			"carpet muncher",
			"carpetmuncher",
			"chav",
			"chink",
			"chinks",
			"christ killer",
			"cohee",
			"coolie",
			"coon",
			"coonass",
			"coondog",
			"coons",
			"curry muncher",
			"currymuncher",
			"dago",
			"daygo",
			"dego",
			"dothead",
			"dotheads",
			"dyke",
			"dykes",
			"fag",
			"faggot",
			"faggs",
			"fagz",
			"flange",
			"gook",
			"gookeye",
			"gookies",
			"gooks",
			"gringo",
			"groid",
			"groids",
			"halfbreed",
			"halfcaste",
			"heeb",
			"homo",
			"honky",
			"injun",
			"jap",
			"japs",
			"jewed",
			"jigaboo",
			"jigaboos",
			"jigs",
			"jungle bunny",
			"kike",
			"kikes",
			"kraut",
			"krauts",
			"kyke",
			"mick",
			"micks",
			"mulatto",
			"muzzy",
			"nigga",
			"niggah",
			"niggas",
			"niggaz",
			"nigger",
			"niggers",
			"paki",
			"pakis",
			"pickaninny",
			"polack",
			"polacks",
			"porch monkey",
			"porchmonkey",
			"raghead",
			"ragheads",
			"retard",
			"retarded",
			"retards",
			"sheister",
			"sheisters",
			"shiksa",
			"shiksas",
			"spic",
			"spics",
			"towelhead",
			"towelheads",
			"wetback",
			"wetbacks",
			"wog",
			"wogs",
			"wop",
		])
	})
}

pub fn is_slur(word: &str) -> bool {
	get_slurs().contains(&word.to_lowercase().as_str())
}
