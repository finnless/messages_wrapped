[package]
edition = "2021"
name = "native"
version = "0.0.0"

[lib]
crate-type = ["cdylib"]

[dependencies]
# Default enable napi4 feature, see https://nodejs.org/api/n-api.html#node-api-version-matrix
napi = { version = "2.12.2", default-features = false, features = [
    "napi4",
    "async",
] }
imessage-database = "2.1.1"
libsqlite3-sys = "0.30.1"
napi-derive = "2.12.2"
rusqlite = "0.32.1"
jemallocator = "0.5.4"
scopeguard = "1.2.0"
serde_json = "1.0.133"
serde = { version = "1.0.215", features = ["derive"] }
jiff = "0.1.14"
regex = "1.11.1"
thiserror = "2.0.3"
image = { version = "0.25.5" }
phonenumber = "0.3.6"
xx-core-macros = { git = "https://github.com/davidzeng0/xx-core", version = "0.1.0" }
reqwest = { version = "0.12.9", features = ["json"] }
aes-gcm = "0.10.3"
base64 = "0.22.1"
rand = "0.8.5"
prost = { version = "0.13.4", features = ["prost-derive"] }
brotli = "7.0.0"
sha2 = "0.10.8"
hex = "0.4.3"

[patch.crates-io]
# add extra build flags for faster speed
libsqlite3-sys = { git = "https://github.com/3eif/rusqlite" }
# patch message get_blob to use blob len as size hint to reduce allocations
imessage-database = { git = "https://github.com/3eif/imessage-exporter" }

[build-dependencies]
napi-build = "2.0.1"
prost-build = "0.13.4"

[profile.release]
lto = true
strip = "symbols"

[lints.rust]
elided_lifetimes_in_paths = "warn"
absolute_paths_not_starting_with_crate = "warn"
missing_copy_implementations = "warn"
single_use_lifetimes = "warn"
unused_crate_dependencies = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
variant_size_differences = "warn"
unsafe_code = "warn"
unexpected_cfgs = "allow"

[lints.clippy]
field_reassign_with_default = "allow"
bool_to_int_with_if = "warn"
branches_sharing_code = "warn"
checked_conversions = "warn"
decimal_literal_representation = "warn"
equatable_if_let = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
ignored_unit_patterns = "warn"
invalid_upcast_comparisons = "warn"
items_after_statements = "warn"
large_digit_groups = "warn"
large_stack_frames = "warn"
large_types_passed_by_value = "warn"
lossy_float_literal = "warn"
manual_clamp = "warn"
manual_string_new = "warn"
manual_assert = "warn"
map_unwrap_or = "warn"
match_wildcard_for_single_variants = "warn"
missing_const_for_fn = "warn"
must_use_candidate = "warn"
mutex_atomic = "warn"
needless_bitwise_bool = "warn"
needless_continue = "warn"
needless_pass_by_ref_mut = "warn"
needless_pass_by_value = "warn"
needless_raw_strings = "warn"
no_effect_underscore_binding = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
partial_pub_fields = "warn"
redundant_clone = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
redundant_pub_crate = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
str_split_at_newline = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
trait_duplication_in_bounds = "warn"
trivially_copy_pass_by_ref = "warn"
type_repetition_in_bounds = "warn"
unnecessary_self_imports = "warn"
unnecessary_wraps = "warn"
unnested_or_patterns = "warn"
unreadable_literal = "warn"
unused_self = "warn"
used_underscore_binding = "warn"
useless_let_if_seq = "warn"
flat_map_option = "warn"
option_as_ref_cloned = "warn"
option_option = "warn"
